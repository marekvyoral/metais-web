cache: 
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        - node_modules/

variables:
  APP_PATH: '$CI_PROJECT_DIR'
  BRANCH_NAME: "develop"
  #treba nastavit korektnu url adresu. Pre kazdu feature vlastnu url adresu. Ak uz nasadzujem finalne riesenie tak hodnoty v OKD_HELM_OPTS su ignorovane. OKD_HELM_OPTS je len pre feature branch
  OKD_HELM_OPTS: "--set metaisPortal.ingress.tls[0].hosts[0]=test.isdd.sk --set metaisPortal.ingress.hosts[0].host=test.isdd.sk --set metaisPortal.ingress.hosts[0].paths[0].path=/ --set metaisAdmin.ingress.tls[0].hosts[0]=test.isdd.sk --set metaisAdmin.ingress.hosts[0].host=test-admin.isdd.sk --set metaisAdmin.ingress.hosts[0].paths[0].path=/"
  APP_VERSION:
    value: ${CI_COMMIT_REF_SLUG}
    description: 'Define image version for push to mirri cloud.'



stages:
    - run-checks
    - build-node
    - build-docker
    - deploy-okd-feature
    - deploy-okd-develop
    - deploy
    - cleanup
    - push-azure-registry

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

checks:
    image: nexus.isdd.sk:8490/node:latest
    stage: run-checks
    before_script:
        - echo "running yarn install"
        - yarn install
    script:
        - yarn run typescript-check
        - yarn run lint
    rules:
        - when: always
    artifacts:
        expire_in: 2 days
        paths:
            - 'app/metais-portal/'
            - 'app/metais-admin/'

.build-node:
    image: nexus.isdd.sk:8490/node:latest
    stage: build-node
    script:
        - yarn run build:$BUILD_ENV
    artifacts:
        expire_in: 2 days
        paths:
            - 'app/metais-portal/dist/'
            - 'app/metais-admin/dist/'
    


.build_docker_template:
    image: nexus.isdd.sk:8490/docker:20.10-git
    stage: build-docker
    services:
        - name: nexus.isdd.sk:8490/docker:dind
          alias: docker
    variables:
        DOCKER_HOST: tcp://docker:2375
    script:
        - apk update && apk add jq
        - APPVERSION=$(jq -r '.version' package.json) && echo "APPVERSION ${APPVERSION}"
        - echo "IMAGE_TAG=${IMAGE_TAG}"
        - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
        # build portal
        - docker build -f docker/Dockerfile --build-arg BUILD_DIR=app/metais-portal/dist/ -t ${CI_REGISTRY_IMAGE}/portal:${IMAGE_TAG} .
        - docker push ${CI_REGISTRY_IMAGE}/portal:${IMAGE_TAG}
        # build admin
        - docker build -f docker/Dockerfile-admin --build-arg BUILD_DIR=app/metais-admin/dist/ -t ${CI_REGISTRY_IMAGE}/admin:${IMAGE_TAG} .
        - docker push ${CI_REGISTRY_IMAGE}/admin:${IMAGE_TAG}
    

build-node-isdd-dev:
    extends: .build-node
    variables: 
        BUILD_ENV: development
    rules:
        - if: $CI_COMMIT_TAG =~ /^isdd-dev.+$/ || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_REF_NAME =~ /^feature\/.+$/i  || $CI_COMMIT_REF_NAME =~ /^met-[^\/]+\/.+$/i || $CI_COMMIT_REF_NAME =~ /^bug\/.+$/i
        
build-node-mirri-test:
    extends: .build-node
    variables: 
        BUILD_ENV: mirri-test
    rules:
        - if: $CI_COMMIT_TAG =~ /^mirri-test.+$/

build-node-mirri-prod:
    extends: .build-node
    variables: 
        BUILD_ENV: mirri-prod
    rules:
        - if: $CI_COMMIT_TAG =~ /^mirri-prod.+$/

build-docker-feature:
    extends: .build_docker_template
    variables: 
        IMAGE_TAG: ${CI_COMMIT_REF_SLUG}
    rules:
        - if: $CI_COMMIT_REF_NAME =~ /^feature\/.+$/i  || $CI_COMMIT_REF_NAME =~ /^met-[^\/]+\/.+$/i || $CI_COMMIT_REF_NAME =~ /^bug\/.+$/i

build-docker-latest:
    extends: .build_docker_template
    variables: 
        IMAGE_TAG: latest
    rules:
        - if: '$CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "main"'

build-docker-version:
    extends: .build_docker_template
    variables: 
        IMAGE_TAG: $CI_COMMIT_REF_SLUG
    rules:
        - if: '$CI_COMMIT_TAG !~ "/^$/"'

deploy-okd-feature:
     stage: deploy-okd-feature
     image: gitlab.isdd.sk:4567/isdd-docker/okd/alpine:1-3-0
     variables: 
         IMAGE_TAG: ${CI_COMMIT_REF_SLUG}
     script:
         - OKD_HELM_OPTS=$OKD_HELM_OPTS
         - CI_COMMIT_BRANCH_TEMP=$CI_COMMIT_BRANCH
         - RELEASE_NAME="${CI_COMMIT_BRANCH_TEMP//\//-}" 
         - RELEASE_NAME=$(echo "$RELEASE_NAME" | tr '[:upper:]' '[:lower:]')
         - OKD_HELM_OPTS="--set metaisPortal.ingress.tls[0].hosts[0]=$RELEASE_NAME-metais3.apps.dev.isdd.sk --set metaisPortal.ingress.hosts[0].host=$RELEASE_NAME-metais3.apps.dev.isdd.sk --set metaisPortal.ingress.hosts[0].paths[0].path=/ --set metaisAdmin.ingress.tls[0].hosts[0]=$RELEASE_NAME-admin-metais3.apps.dev.isdd.sk --set metaisAdmin.ingress.hosts[0].host=$RELEASE_NAME-admin-metais3.apps.dev.isdd.sk --set metaisAdmin.ingress.hosts[0].paths[0].path=/admin --set image.AppVersion=${IMAGE_TAG}"
         - echo $OKD_HELM_OPTS
         - curl -X POST --fail -F token=$CD_REPO_TOKEN -F ref=$BRANCH_NAME --form "variables[HELM_RELEASE_NAME]=$RELEASE_NAME" --form "variables[OKD_HELM_OPTS]=$OKD_HELM_OPTS" https://gitlab.isdd.sk/api/v4/projects/967/trigger/pipeline
         - echo "#####################################################################"
         - echo "######http://$RELEASE_NAME-metais3.apps.dev.isdd.sk######"
         - echo "######http://$RELEASE_NAME-admin-metais3.apps.dev.isdd.sk######"
         - echo "###################################################3#################"
     rules:
         - if: $CI_COMMIT_REF_NAME =~ /^feature\/.+$/i  || $CI_COMMIT_REF_NAME =~ /^met-[^\/]+\/.+$/i || $CI_COMMIT_REF_NAME =~ /^bug\/.+$/i
           when: on_success

cleanup-feature-helm:
  stage: cleanup
  image: gitlab.isdd.sk:4567/isdd-docker/base-images/kubectl-delivery:1-0-0
  script:
    - echo "Cleaning up Helm release for feature branch..."
    - oc login --token=eyJhbGciOiJSUzI1NiIsImtpZCI6IlRBZjI2NXItcVZhM3ZiTjZlakpDYjhHUW1ib0VwU21DaEt5eGdORFM5T1UifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtZXRhaXMzIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImdpdGxhYi1kZXBsb3llci10b2tlbi1obDdtdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJnaXRsYWItZGVwbG95ZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJjODUwOGVkMS1lN2E4LTQ5MzEtOGJhOS05OWYxNmMzM2VlZGYiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6bWV0YWlzMzpnaXRsYWItZGVwbG95ZXIifQ.Q6rYZSlnNYLk4Q3PfiBnlei0xc3Pmh9u-QJgznlDff_LQyc_gj1wREIiu9PxIrzdj89SqgxiZeo5qrzLsXTg_mSm6TNEC3nIk2Lt4TmSTdUE1Ih2waJKnXGjJs5JE2XY5PF7FgU9WXfbvtZyFcJmfBBipI3_dABeObj_afpR55YU2UsVoJ_Swu6PpsrXZELkqPQamn6qpljBWGA8_LRH2pxSS4Nb3KRfuQiZJI0dN3rhZwQ01ovoALOAgPfECzcaaaaw0i3gwhHaTkSpgW2PiPdQb7cfip_R4xd3QQUEN2zThfjNS7ihcqk4uXA56Heg6tplBP5GqwQFGsa3-32rug --server=https://api.dev.isdd.sk:6443
    - helm uninstall "feature-${CI_COMMIT_REF_NAME}" -n metais3
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^feature\/.+$/ && $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual


deploy-okd-develop:
    stage: deploy-okd-develop
    image: gitlab.isdd.sk:4567/isdd-docker/okd/alpine:1-3-0
    variables: 
         IMAGE_TAG: ${CI_COMMIT_REF_SLUG}
    script:
        - OKD_HELM_OPTS="--set image.AppVersion=${IMAGE_TAG}"
        - curl -X POST --fail -F token=$CD_REPO_TOKEN -F ref=$BRANCH_NAME --form "variables[OKD_HELM_OPTS]=$OKD_HELM_OPTS" https://gitlab.isdd.sk/api/v4/projects/967/trigger/pipeline
    rules:
        - if: $CI_COMMIT_TAG =~ /^isdd-dev.+$/
          when: on_success



push-azure-registry: 
  stage: push-azure-registry  
  trigger:
    project: cd/metais3/azure-infrastructure/cd_applications/metais3-azure-registry
    branch: frontend
  rules:
    - if: $CI_COMMIT_TAG =~ /^mirri-test.+$/
    - if: $CI_COMMIT_TAG =~ /^mirri-prod.+$/
