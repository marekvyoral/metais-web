{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:react-hooks/recommended",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "prettier",
        "plugin:prettier/recommended"
    ],
    "overrides": [],
    "parser": "@typescript-eslint/parser",
    "ignorePatterns": ["**/**/**/**/generated/*.ts", "**/**/scripts/*.js", "node_modules", "dist"],
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module",
        "ecmaFeatures": {
            "jsx": true
        }
    },
    "plugins": ["react", "@typescript-eslint", "react-hooks", "import", "prettier"],
    "rules": {
        /**
         * Base rules
         */
        // Disallow the use of alert, confirm, and prompt
        // https://eslint.org/docs/rules/no-alert
        "no-alert": "error",
        // Allow use of undefined
        // https://eslint.org/docs/rules/no-undefined
        "no-undefined": "off",
        // Warn about warning comments, e.g: todo, fixme
        // https://eslint.org/docs/2.0.0/rules/no-warning-comments
        "no-warning-comments": [
            "warn",
            {
                "terms": ["todo", "fixme"],
                "location": "start"
            }
        ],
        /**
         * React rules
         */
        // Enforce Rules of Hooks
        // https://github.com/facebook/react/blob/c11015ff4f610ac2924d1fc6d569a17657a404fd/packages/eslint-plugin-react-hooks/src/RulesOfHooks.js
        "react-hooks/rules-of-hooks": "error",
        // Verify the list of the dependencies for Hooks like useEffect and similar
        // https://github.com/facebook/react/blob/1204c789776cb01fbaf3e9f032e7e2ba85a44137/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js
        "react-hooks/exhaustive-deps": "warn",
        // We don"t use propTypes we use typed props instead
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/prop-types.md
        "react/prop-types": "off",
        // Prevent missing displayName in a React component definition, e.g. with forwardRef, etc.
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/display-name.md
        "react/display-name": [
            "off",
            {
                "ignoreTranspilerName": false
            }
        ],
        "react/jsx-uses-react": 0,

        "react/react-in-jsx-scope": 0,
        // Enforce boolean attributes notation in JSX
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-boolean-value.md
        "react/jsx-boolean-value": [
            "error",
            "never",
            {
                "always": []
            }
        ],
        /**
         * Import rules
         */
        // Allow using named exports as single export
        "import/prefer-default-export": "off",
        // Do not allow a default import name to match a named export
        // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-named-as-default.md
        "import/no-named-as-default": "error",
        // Disallow duplicate imports
        // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-duplicates.md
        "import/no-duplicates": "error",
        // Allow any order of import statements
        // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/order.md
        "import/order": [
            "warn",
            {
                "newlines-between": "always"
            }
        ],
        "import/namespace": "off",
        "prettier/prettier": ["warn"],
        "no-console": "warn",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/no-shadow": "warn",
        "no-duplicate-imports": "error",
        "react/self-closing-comp": "warn",
        "no-use-before-define": "warn",
        "no-restricted-imports": [
            "error",
            {
                "patterns": ["*.svg"]
            }
        ],
        "import/no-useless-path-segments": [
            "warn",
            {
                "noUselessIndex": true
            }
        ]
    },
    "settings": {
        "import/resolver": {
            "typescript": {
                "project": ["./tsconfig.json", "./packages/*/tsconfig.json", ".app/*/tsconfig.json"]
            },
            "alias": {
                "map": [
                    ["@", "src"],
                    ["@isdd/metais-common", "../../packages/metais-common/src"],
                    ["@isdd/idsk-ui-kit", "../../packages/idsk-ui-kit/src"]
                ]
            }
        },
        "import/extensions": [".js", ".jsx", ".ts", ".tsx"]
    }
}
